#!/usr/bin/env bash

# Backend aliases required by API
vbar()   { echo -n -;  sleep 0.1; echo -ne '\b'; bbar;                         }
sbar()   { echo -n /;  sleep 0.1; echo -ne '\b'; vbar;                         }
bbar()   { echo -n \\; sleep 0.1; echo -ne '\b'; hbar;                         }
hbar()   { echo -n \|; sleep 0.1; echo -ne '\b'; sbar;                         }
bar()    { tput civis; while true; do vbar; done;                              }
load()   { bar & lpid=$!;                                                      }
unload() { tput cnorm; kill "$lpid" &> ${log_file} && echo -ne '\b';           }
sigint() { tput cnorm; error "\nUser interrupted";                             }
report() { echo "Please report any defects to <briansalehi@proton.me>";        }
error()  { echo -e  "\e[1;31m$1\e[0m"; cat ${log_file}; report; exit 1;        }
step()   { echo -n  "$1 "; load; trap "sigint" INT;                            }
check()  { unload; echo -e  "\e[1;32m\u2713\e[0m ";                            }
failed() { unload; echo -ne "\e[1;31m\u2717\e[0m "; return 1;                  }
warn()   { echo -e  "\e[1;31m$1\e[0m"; return 1;                               }
skip()   { echo -e  "\e[1;33m$1\e[0m"; return 1;                               }

# Use APIs
task()   { step "$1"; eval $2 &>> /tmp/task  || failed || error "$3" ;  check; }
try()    { step "$1"; (eval $2 &>> /tmp/task || failed || warn "$3") && check; }
option() { step "$1"; (eval $2 &>> /tmp/task || failed || skip "$3") && check; }
