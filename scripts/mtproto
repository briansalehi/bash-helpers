#!/usr/bin/env bash

mtproto_country="US"
mtproto_cache="/tmp/mtproto.hosts"

function mtproto_usage() {
    echo "mtproto [-h] [-c <country_name=US>]"
    echo
    echo "options"
    echo
    echo " -h,--help            print help menu"
    echo " -c,--country <code>  country code or name"
    echo " -l,--limit <numbers> number of matches"
}

function mtproto_choose_country() {
    local country_name="$1"

    case "${country_name,,}" in
        gb|britain) mtproto_country=GB ;;
        us|america) mtproto_country=US ;;
        de|germany) mtproto_country=DE ;;
        *) echo "unknown country, falling back to US"; mtproto_country=US
    esac
}

function mtproto_report_query() {
    local entries="$1"
    local index="$2"
    local accepted="$3"
    local query
    # global field_length to save previous query lenght for next iteration

    query="$accepted proxies ($index/$entries entries)"
    printf "%0.s\b" $(seq 1 "${field_length:-0}") >&2
    field_length="${#query}"
    echo -ne "$query" >&2
}

function mtproto() {
    local match_limit=1
    local max_count="$match_limit"
    local address_list="/tmp/mtproto.list"
    local index
    local country
    local country
    local port
    local host
    local secret
    local object
    local latency
    local link
    local entries
    local accepted=0
    local ping_entry
    local choice
    local -A results

    [ -s "$mtproto_cache" ] && rm "$mtproto_cache"

    while [ $# -gt 0 ]
    do
        case "$1" in
            -h|--help) mtproto_usage; return ;;
            -c|--country) mtproto_choose_country "$2"; shift ;;
            -l|--limit) match_limit="$2"; shift ;;
            *) mtproto_usage; return ;;
        esac
        shift
    done

    case "$match_limit" in
        [0-9]*) max_count="$match_limit" ;;
        *) match_limit=1; max_count="1" ;;
    esac

    # retrieve latest proxy list
    if ! curl -s 'https://mtpro.xyz/api/?type=mtproto' > "$address_list"
    then
        echo "failed to load uri" >&2
        return
    fi

    entries="$(jq '. | length' "$address_list")"

    echo -n "Loading  " >&2

    for index in $(seq 0 "${entries:-1}")
    do
        mtproto_report_query "$entries" "$index" "$accepted"

        object="$(jq -r ".[$index]" "$address_list")"
        country="$(jq -r '.country' <<< "$object")"

        if [ "$country" != "$mtproto_country" ]
        then
            continue
        fi

        host="$(jq -r '.host' <<< "$object")"
        port="$(jq -r '.port' <<< "$object")"
        secret="$(jq -r '.secret' <<< "$object")"

        if ping_entry="$(ping -n -c1 -W1 "$host")"
        then
            echo "$ping_entry" | awk -v c="$country" \
             -v h="$host" \
             -v p="$port" \
             -v s="$secret" \
             'BEGIN{FS="/"} $1 == "rtt min" {printf "%d %s tg://proxy?server=%s&port=%d&secret=%s\n", $5,c,h,p,s}'

            ((++accepted))

            mtproto_report_query "$entries" "$index" "$accepted"

            [ "$((--max_count))" -eq 0 ] && break
        fi

        ((++index))
    done | nl | sort -k 2 -n 1> "$mtproto_cache"
    echo; echo

    for index in $(seq 1 "$match_limit")
    do
        latency="$(sed -n "${index}p" "$mtproto_cache" | awk '{print $2}')"
        country="$(sed -n "${index}p" "$mtproto_cache" | awk '{print $3}')"
        link="$(sed -n "${index}p" "$mtproto_cache" | awk '{print $4}')"
        address="$(sed -n 's/.*server=\([0-9.]\+\)\&port=\([0-9]\+\)\&.*/\1:\2/p' <<< "$link")"

        results["$country: $address (${latency}ms)"]="$link"
    done

    if [ "${#results[@]}" -eq 1 ]
    then
        echo -e "Prompting telegram for \e[1;31m${!results[*]}\e[0m" >&2
        xdg-open "${results[*]}"
    else
        select choice in "${!results[@]}"
        do
            echo -e "Prompting telegram for \e[1;31m${choice}\e[0m" >&2
            xdg-open "${results[$choice]}" 2>/dev/null
        done
    fi
}
